import {
  Box,
  Center,
  Flex,
  Spacer,
  Text,
  IconButton,
} from '@chakra-ui/react'
import { useEffect, useState, useRef } from 'react'
import { BiChevronDown } from 'react-icons/bi'
import { useQuery } from 'react-query'
import { useLocation, useParams } from 'react-router-dom'
import AgencyLogo from '../../components/AgencyLogo/AgencyLogo.component'
import SearchBoxComponent from '../../components/SearchBox/SearchBox.component'
import { useAuth } from '../../contexts/AuthContext'
import {
  getAgencyByShortName,
  GET_AGENCY_BY_SHORTNAME_QUERY_KEY,
  Agency as AgencyType,
} from '../../services/AgencyService'
import { isUserPublicOfficer } from '../../services/user.service'
import { mergeTags } from '../../util/tagsmerger'
import { getTagsQuery } from '../../util/urlparser'


const HomePage = ({ match }) => {
  // check URL
  const location = useLocation()
  // TODO (#259): make into custom hook
  useEffect(() => {
    setQueryState(getTagsQuery(location.search))
  }, [location])

  const { user } = useAuth()

  const { agency: agencyShortName } = useParams<{agency: string}>()
  const { data: agency } = useQuery(
    [GET_AGENCY_BY_SHORTNAME_QUERY_KEY, agencyShortName],
    () => getAgencyByShortName({ shortname: agencyShortName }),
    { enabled: !!agencyShortName },
  )

  // dropdown options
  const options = [
    { value: 'top', label: 'Popular' },
    { value: 'basic', label: 'Most recent' },
  ]
  // dropdown state, default popular
  const [queryState, setQueryState] = useState('')

  const agencyAndTags = mergeTags(match.params.agency, queryState)
  const isAuthenticatedOfficer = isUserPublicOfficer(user)

  const mobileSearchHeightRef = useRef('100vh')
  const [agencyState, setAgencyState] = useState<AgencyType>(match.params.agency)

  useEffect(() => {
    mobileSearchHeightRef.current =
      'calc(100vh - ' +
      document.getElementById('mobile-search').getBoundingClientRect().top +
      'px - ' +
      window.scrollY +
      'px)'
    setAgencyState(agency)
  }, [agency])
  console.log(agencyAndTags)
  const scrollToQuestions = () => {
    const questionsView = document.getElementById('questions-view')
    questionsView.scrollIntoView({
      behavior: 'smooth',
      block: 'start',
    })
  }

  return (
    <Box id="mobile-search" height={mobileSearchHeightRef.current}>
      <Flex direction="column" height="100%">
        <Spacer />
        <Flex direction="column" height="80%">
          <Spacer />
          <Center>
            <Box w="85%">
              {agencyState ? (
                <Flex
                  // flex="1"
                  // mt="56px"
                  // mr={{ base: '48px', xl: '88px' }}
                  // display={{ base: 'none', md: 'flex' }}
                  direction="column"
                >
                  <AgencyLogo />
                  <Spacer />
                  <Text
                    // position={{ base: 'relative', md: 'static' }}
                    // top={{ base: '-6px', md: 0 }}
                    py="10px"
                    textStyle="h1-mobile"
                  >
                    {agencyState.longname}
                  </Text>
                </Flex>
              ) : null}
              <Box
                flex="5"
                h="58px"
                mt={
                  agency
                    ? { base: '20px', md: '56px' }
                    : { base: '4px', xl: '56px' }
                }
                mx={agency ? 0 : 'auto'}
                maxW={{ base: '100%', xl: '80%' }}
              >
                <SearchBoxComponent
                  agencyShortName={agencyState?.shortname}
                  inputVariant="filled" />
              </Box>
              <Text py="20px" textStyle="body-2">
                Common topics include [top category 1], [top category 2], [top
                category 3]
              </Text>
            </Box>
          </Center>
          <Spacer />
        </Flex>
        <Spacer />
        <Center>
          <IconButton
            aria-label="Search database"
            variant="ghost"
            isRound
            icon={<BiChevronDown size="sm" color="grey" />}
            onClick={scrollToQuestions}
          />
        </Center>
        <Spacer />
      </Flex>
    </Box>
  )
}

export default HomePage
